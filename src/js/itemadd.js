(function(React){

        "use strict";


        var CommentForm = React.createClass({
            getInitialState: function() {
              return {
                  subject : {
                    "UID" : "",
                    "name" : ""
                  },
                  item: {
                    "item_name" : "",
                    "item_link" : "",
                    "item_desc" : "",
                  }
              };
            },

            handleCommentSubmit: function(comment) {

                var comments = this.state.data;
                // Optimistically set an id on the new comment. It will be replaced by an
                // id generated by the server. In a production application you would likely
                // not use Date.now() for this and would have a more robust system in place.
                comment.id = Date.now();
                var newComments = comments.concat([comment]);
                this.setState({data: newComments});

                $.ajax({
                    url: this.props.commentsUrl,
                    dataType: 'json',
                    type: 'POST',
                    data: comment,
                    success: function(data) {
                        this.setState({data: data});

                    }.bind(this),
                    error: function(xhr, status, err) {
                        this.setState({data: comments}); //hhhhmmmm...  don't know that I agree with this. updates list if an error occurs?
                        console.error(this.props.url, status, err.toString());
                    }.bind(this)
                });
            },

            render: function() {
                return (
                  <form onSubmit={this.handleCommentSubmit} className='item-add-form'>
                    <fieldset className='item-add-form-fieldset'>
                      <legend className='item-add-form-fieldset-legend'>Add item to {this.state.subject.name} list</legend>
                      <label className='item-add-form-fieldset-label'>
                        <input name='item_name' type="text" className='item-add-form-fieldset-label-text' placeholder="gift" value={this.state.item.item_name} />
                      </label>
                      <label className='item-add-form-fieldset-label'>
                        <input name='item_link' type="url" className='item-add-form-fieldset-label-url' placeholder="link" value={this.state.item.item_url} />
                      </label>
                      <label className='item-add-form-fieldset-label'>
                        <textarea name='item-desc' placeholder="optional description" className='item-add-form-fieldset-label-textarea' value={this.state.item.item_desc}></textarea>
                      </label>
                      <p className='item-add-form-fieldset-hint'>note - if you add an item to someone else&#8217;s list, it will automatically be set to &#8217;purchased&#8217; by you.</p>
                      <input type="submit" value="Post" className='btn btn-primary' />
                    </fieldset>
                  </form>
                );
            }
        });



        ReactDOM.render(

                <CommentForm commentsUrl="api/item-add/" />,
                document.getElementById('itemAddContainer')
        );

                 })(React);
