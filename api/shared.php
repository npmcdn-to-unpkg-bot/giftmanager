<?php
header('Content-type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, PATCH');
session_start();
include "/home/vicegrip/includes/2014/db_functions.php";
include "/home/vicegrip/includes/2014/credentials.php";


//error handler.
//The request is passed in instead of this function referencing $_REQUEST directly so that if a pipelined model is ever supported, the error handler consinues to work without modifying every reference to it.
//$m is meta. error specific messaging. not required for any specific error, but used by some.

// TODO -> this would be better as a class that can be extended. All the generic messages are generated by default. Each API module can then extend the class with module-specific errors.
// TODO -> error handler function.  Pass in the JSON passed on the request. maybe an array of required properties. Checks for and responds accordingly. Maybe this is another class that is extended by each module?

function apiMsg($msgid,$req,$m='')	{
	$r = array(); //what is returned.


	$messages = array();

	$messages[100] = array("type"=>"success","msg"=>($m ? $m : "CMD ".$req[cmd]." was successful.")); //generic success message. Use $m to customize message (encouraged)

	//1000 = high level errors.
	$messages[999] = array(
		"msg" => "This session is not valid. Please try logging in.", "type" => "error"
		);

	$messages[1000] = array(
		"msg" => "No POST object detected.", "type" => "error"
		);
	$messages[1001] = array(
		"msg" => "Invalid command [".$req['cmd']."] specified.", "type" => "error"
		); //command is not in the list of supported commands.

	$messages[1002] =  array(
		"msg" => "A valid command was passed, however an internal error occured.", "type" => "error"
		); //command is supported, but the corresponding function doesn't exist.
	//1003 would be for a mysql_error.  If the query worked but no results were found (and some were expected) use error 1010.
	$messages[1003] = array(
		"msg" => "The attempt to request/update data to the database has failed. error: ".$m, "type" => "error"
		);

	$messages[1005] = array(
		"msg" => "No command specified.", "type" => "error"
		);
	$messages[1006] = array(
		"msg" => "An unknown error occured.",
		"req" => $req,
		"type" => "error"
		);

	$messages[1007] =  array(
		"msg" =>  "A required parameter was missing. ".$m, "type" => "error"
		);

	$messages[1008] =  array(
		"msg" =>  "A required parameter was invalid. ".$m, "type" => "error"
		);

	$messages[1009] =  array(
		"msg" =>  "Unexpected result set from query. ".$m, "type" => "error"
		);

	$messages[1010] =  array(
		"msg" =>  "No matches found. ".$m, "type" => "error"
		);

	if($messages[$msgid])	{
		$r = $messages[$msgid];
		$r[msgid] = $msgid;
		}
	else	{
		$r['msgid'] = 1;
		$r['error'] = "An unspecified error has occured.  msgid was ".$msgid." which is an unknown error code.";
		}

	$r['cmd'] = $req['cmd'];

	return $r;
	}


//use get for read and post for write, when applicable.
$commands = array(
// auth
	"isSessionValid",
	"logout",
	"googleAuthenticate",
	// we will need facebook also

	"users" //read only. get list of users

	"wishlist" //read/write. expects userid param to be set.


	);

$response = array(); //what is returned by the API. either a successful response or an error.
$cmd = $_REQUEST['cmd']; //shortcut. change to POST.



//http://coursesweb.net/php-mysql/integer-float-value-select-pdo-string-numeric_t
function preserveType($row)	{
	foreach($row AS $k=>$v) {
		if(is_numeric($v)) $row[$k] = $v + 0;
		}
	return $row;
	}


function results2array($r)	{
	$rows = array();
	$i = 0;
	while($row = mysql_fetch_assoc($r))	{
		$rows[$i] = preserveType($row);
		$i++;
		}
	return $rows;
	}



//nothing but pure data is returned unless an error occurs.
print_r(json_encode($response));
?>